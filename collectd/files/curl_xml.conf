{%- from "collectd/map.jinja" import collectd_settings with context %}

#
# DO NOT EDIT
#
# This file is managed by salt via {{ source }}
# Modify the config that generates this file instead
#

LoadPlugin curl_xml

<Plugin curl_xml>
{% for block, block_data in collectd_settings.plugins.curl_xml.items() %}
  <{{ block }}>
    {%- if block_data.host is defined %}
    Host "{{ block_data.host }}"
    {%- endif %}
    {%- if block_data.instance is defined %}
    Instance "{{ block_data.instance }}"
    {%- endif %}
    {%- if block_data.namespace is defined %}
    Namespace "{{ block_data.namespace }}"
    {%- endif %}
    {%- if block_data.user is defined %}
    User "{{ block_data.user }}"
    {%- endif %}
    {%- if block_data.password is defined %}
    Password "{{ block_data.password }}"
    {%- endif %}
    {%- if block_data.digest is defined %}
    Digest {{ block_data.digest | lower }}
    {%- endif %}
    {%- if block_data.verifypeer is defined %}
    VerifyPeer {{ block_data.verifypeer | lower }}
    {%- endif %}
    {%- if block_data.verifyhost is defined %}
    VerifyHost {{ block_data.verifyhost | lower }}
    {%- endif %}
    {%- if block_data.cacert is defined %}
    CACert "{{ block_data.cacert }}"
    {%- endif %}
    {%- if block_data.header is defined %}
    Header "{{ block_data.header }}"
    {%- endif %}
    {%- if block_data.post is defined %}
    Post "{{ block_data.post }}"
    {%- endif %}
    {%- if block_data.timeout is defined %}
    Timeout {{ block_data.timeout }}
    {%- endif %}

    {%- for xpath in block_data['xpaths'] %}
    <XPath "{{ xpath.name }}">
      Type "{{ xpath.data.type }}"
        {%- if xpath.data.instance_prefix is defined %}
      InstancePrefix "{{ xpath.data.instance_prefix }}"
        {%- endif %}
        {%- if xpath.data.instance_from is defined %}
      InstanceFrom "{{ xpath.data.instance_from }}"
        {%- endif %}
        {%- if xpath.data.values_from is defined %}
      ValuesFrom {% for value in xpath.data.values_from %}"{{ value }}" {% endfor %}
        {%- endif %}
    </XPath>
    {%- endfor %}
  </{{ block.split(' ') | first }}>
{% endfor %}
</Plugin>
